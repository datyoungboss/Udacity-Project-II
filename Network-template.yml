Parameters:
    
    ProjectName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: Myproject2

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16
    PublicSubnetACIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24
    PublicSubnetBCIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnetACIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnetBCIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 10.0.3.0/24
Resources: 
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref ProjectName
    InternetGateway:
        Type: AWS::EC2::InternetGateway
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC
    PublicSubnetA: 
            Type: AWS::EC2::Subnet
            Properties:
                VpcId: !Ref VPC
                AvailabilityZone: !Select [ 0, !GetAZs '' ]
                CidrBlock: !Ref PublicSubnetACIDR
                MapPublicIpOnLaunch: true
                Tags: 
                    - Key: Name 
                      Value: !Sub ${ProjectName} Public Subnet (AZ1)
    PublicSubnetB: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnetBCIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Public Subnet (AZ2)
    PrivateSubnetA: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnetACIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Private Subnet (AZ1)
    PrivateSubnetB: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnetBCIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Private Subnet (AZ2)
    NatGatewayA: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: 
                Fn::GetAtt: 
                - NatGatewayAEIP
                - AllocationId
            SubnetId: !Ref PublicSubnetA
    NatGatewayAEIP:
        Type: AWS::EC2::EIP
        Properties:
            Tags:
                - Key: Name
                  Value: "Elastic IP for our NAT Gateway"
    NatGatewayB: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: 
                Fn::GetAtt: 
                - NatGatewayBEIP
                - AllocationId
            SubnetId: !Ref PublicSubnetB
    NatGatewayBEIP:
        Type: AWS::EC2::EIP
        Properties:
            Tags:
                - Key: Name
                  Value: "Elastic IP for our NAT Gateway"
    PublicRouteTableA:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Public Routes A
    DefaultPublicARoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTableA
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
    PublicSubnetARouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTableA
            SubnetId: !Ref PublicSubnetA
    PublicRouteTableB:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Public Routes B
    DefaultPublicBRoute: 
        Type: AWS::EC2::Route
        Properties: 
            RouteTableId: !Ref PublicRouteTableB
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
    PublicSubnetBRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTableB
            SubnetId: !Ref PublicSubnetB
    PrivateRouteTableA:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Private Routes A
    DefaultPrivateRouteA:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTableA
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGatewayA
    PrivateSubnetARouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTableA
            SubnetId: !Ref PrivateSubnetA
    PrivateRouteTableB:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${ProjectName} Private Routes B
    DefaultPrivateRouteB:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTableB
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGatewayB
    PrivateSubnetARouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTableB
            SubnetId: !Ref PrivateSubnetB

Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: !Sub ${ProjectName}-VPCID

    VPCPrivateRouteTableA:
        Description: Private Routing AZ1
        Value: !Ref PrivateRouteTableA
        Export:
          Name: !Sub ${ProjectName}-PRI-A-RT

    VPCPrivateRouteTableB:
        Description: Private Routing AZ2
        Value: !Ref PrivateRouteTableB
        Export:
          Name: !Sub ${ProjectName}-PRI-B-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnetA, !Ref PublicSubnetB ]]
        Export:
          Name: !Sub ${ProjectName}-PUB-NETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnetA, !Ref PrivateSubnetB ]]
        Export:
          Name: !Sub ${ProjectName}-PRIV-NETS

    PublicSubnetA:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnetA
        Export:
          Name: !Sub ${ProjectName}-PUB-A-SN

    PublicSubnetB: 
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnetB
        Export:
          Name: !Sub ${ProjectName}-PUB-B-SN

    PrivateSubnetA:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnetA
        Export:
          Name: !Sub ${ProjectName}-PRI-A-SN

    PrivateSubnetB: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref PrivateSubnetB
        Export:
          Name: !Sub ${ProjectName}-PRI-B-SN
    